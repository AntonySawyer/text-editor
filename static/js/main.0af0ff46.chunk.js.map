{"version":3,"sources":["utils/StorageWorker.js","utils/prepareDataToSave.js","utils/domWorker.js","utils/tagsFilter.js","components/Tag/index.js","components/Tag/Tag.js","components/TagCloud/index.js","components/TagCloud/TagCloud.js","components/NotesList/index.js","components/NotesList/NotesList.js","components/NotesViewer/index.js","components/NotesViewer/NotesViewer.js","App.js","serviceWorker.js","index.js"],"names":["getData","key","JSON","parse","localStorage","getItem","checkData","notes","Object","keys","length","setItem","stringify","1","id","title","text","tags","saveData","data","modifyData","values","includes","newId","deleteData","firstId","dataList","ids","formatTag","input","document","getElementById","strToSave","value","trim","replace","getNoteObj","concat","innerText","tagsArr","querySelectorAll","forEach","el","push","join","defineProperty","injectTags","note","map","t","uniqueArr","arr","toConsumableArray","Set","editStart","noteText","querySelector","setAttribute","classList","add","focusAtEnd","remove","style","editEnd","focus","window","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText","select","tagsFilter","obj","needed","result","Tag","_ref","filter","react_default","a","createElement","className","onClick","TagCloud","TagsElements","components_Tag","type","placeholder","NotesList","activeNote","onChange","newNote","filterEnabled","NotesTitles","undefined","htmlFor","name","checked","components_TagCloud","NotesViewer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","target","keyCode","highlightTags","arguments","container","content","match","innerHTML","newTagArr","autoTagCreate","slice","state","nextProps","_this2","_this$props","editNote","contentEditable","onKeyUp","React","Component","App","changeNote","DomWorker","reReadStorage","activeNoteId","noteTags","TagsFilter","split","targetId","StorageWorker","dataToSave","PrepareData","emptyNote","newTagsNote","_this$state","savedTags","newTagsTotal","i","tag","modifNote","filteredNotes","noteId","_this$state2","components_NotesList","components_NotesViewer","Boolean","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0af0ff46.chunk.js","sourcesContent":["export const getData = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n};\r\n\r\nexport const checkData = () => {\r\n  const notes = getData('notes');\r\n  if (notes === null || Object.keys(notes).length === 0) {\r\n    localStorage.setItem('notes', JSON.stringify({ 1: { id: 1, title: 'Unnamed note №1', text: 'Click \"edit\" button!', tags: '' } }));\r\n  }\r\n  if (getData('tags') === null) {\r\n    localStorage.setItem('tags', JSON.stringify({}));\r\n  }\r\n}\r\n\r\nexport const saveData = (key, data, id) => {\r\n  const modifyData = getData(key);\r\n  switch (key) {\r\n    case 'tags':\r\n      if (!Object.values(modifyData).includes(data)) {\r\n        const idToSave = newId(key);\r\n        modifyData[idToSave] = data;\r\n      }\r\n      break;\r\n    case 'notes':\r\n      modifyData[id] = data[id];\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  localStorage.setItem(key, JSON.stringify(modifyData));\r\n}\r\n\r\nexport const deleteData = (key, id) => {\r\n  const modifyData = getData(key);\r\n  delete modifyData[id];\r\n  localStorage.setItem(key, JSON.stringify(modifyData));\r\n  checkData();\r\n}\r\n\r\nexport const firstId = (key) => {\r\n  const dataList = getData(key);\r\n  return Object.keys(dataList)[0];\r\n}\r\n\r\nexport const newId = (key) => {\r\n  const dataList = getData(key);\r\n  const ids = Object.keys(dataList);\r\n  return ids.length === 0 ? 1 : +ids[ids.length - 1] + 1;\r\n}\r\n\r\nexport const isExist = (id) => {\r\n  const notesList = getData('notes');\r\n  return id in notesList;\r\n}","export const formatTag = () => {\r\n  const input = document.getElementById('newTadName');\r\n  const strToSave = input.value.trim().replace(/ /g, '_');\r\n  input.value = '';\r\n  return strToSave;\r\n}\r\n\r\nexport const getNoteObj = (id) => {\r\n  let title = document.getElementById('editNoteTitle').value;\r\n  if (title === '') {\r\n    title = `Unnamed note №${id}`;\r\n  }\r\n  const text = document.getElementById('noteText').innerText;\r\n  const tagsArr = [];\r\n  document.querySelectorAll('#noteTags span').forEach(el => tagsArr.push(el.innerText));\r\n  const tags = tagsArr.join(',');\r\n  return {[id]: {id, title, text, tags}};\r\n}\r\n\r\nexport const injectTags = (note, tags) => {\r\n  tags.map(t => formatTag(t))\r\n  note.tags = uniqueArr(tags).join(',');\r\n  return {[note.id]: note};\r\n}\r\n\r\nexport const uniqueArr = (arr) => {\r\n  return [...new Set(arr)];\r\n}","export function editStart() {\r\n  const noteText = document.querySelector('.textArea');\r\n  noteText.setAttribute('contentEditable', true);\r\n  noteText.classList.add('editNoteText');\r\n  focusAtEnd(noteText);\r\n  document.getElementById('editBtn').classList.add('hidden');\r\n  document.getElementById('saveBtn').classList.remove('hidden');\r\n  document.querySelector('.notes-viewer > h1').style = \"display: none\";\r\n  document.getElementById('editNoteTitle').classList.remove('hidden');\r\n}\r\n\r\nexport function editEnd() {\r\n  const noteText = document.querySelector('.textArea');\r\n  noteText.setAttribute('contentEditable', false);\r\n  noteText.classList.remove('editNoteText');\r\n  document.getElementById('editBtn').classList.remove('hidden');\r\n  document.getElementById('saveBtn').classList.add('hidden');\r\n  document.querySelector('.notes-viewer > h1').style = {};\r\n  document.getElementById('editNoteTitle').classList.add('hidden');\r\n  document.getElementById('newNoteTitle').value = '';\r\n}\r\n\r\nexport function clearAllInputs() {\r\n  document.querySelector('.textArea').innerHTML = '';\r\n  document.getElementById('editNoteTitle').value = '';\r\n}\r\n\r\nexport function focusAtEnd(el) {\r\n  el.focus();\r\n  if (typeof window.getSelection != \"undefined\" &&\r\n    typeof document.createRange != \"undefined\"\r\n  ) {\r\n    const range = document.createRange();\r\n    range.selectNodeContents(el);\r\n    range.collapse(false);\r\n    const sel = window.getSelection();\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n  } else if (typeof document.body.createTextRange != \"undefined\") {\r\n    const textRange = document.body.createTextRange();\r\n    textRange.moveToElementText(el);\r\n    textRange.collapse(false);\r\n    textRange.select();\r\n  }\r\n}","export default (obj, needed) => {\r\n  const result = {};\r\n  for (let key in obj) {\r\n    if (needed.includes(obj[key])) {\r\n      result[key] = obj[key];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n","import Tag from './Tag';\r\n\r\nexport default Tag;","import React from 'react';\r\nimport './Tag.scss';\r\n\r\nexport default ({ title, deleteData, filter }) => {\r\n  return (\r\n    <div className=\"tag-wrapper\">\r\n      <span onClick={ filter }>{ title }</span>\r\n      <button className=\"btn btn-red\" onClick={ deleteData }>del</button>\r\n    </div>\r\n  )\r\n}","import TagCloud from './TagCloud';\r\n\r\nexport default TagCloud;","import React from 'react';\r\n\r\nimport Tag from '../Tag';\r\n\r\nexport default ({ tags, deleteData, saveData, filter }) => {\r\n\r\n  const TagsElements = [];\r\n  Object.keys(tags).forEach(id => {\r\n    TagsElements.push(<Tag key={id} title={tags[id]} filter={() => filter(id)} \r\n                          deleteData={() => deleteData('tags', id) } />);\r\n  });\r\n  return (\r\n    <div className=\"tag-cloud\">\r\n      <input type=\"text\" id=\"newTadName\" placeholder=\"Type new tag here...\" />\r\n      <button className=\"btn btn-green\" onClick={() => saveData('tags')}>Add</button>\r\n      <div>\r\n        {TagsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import NotesList from './NotesList';\r\n\r\nexport default NotesList;","import React from 'react';\r\n\r\nimport TagCloud from '../TagCloud';\r\nimport './NotesList.scss';\r\n\r\n\r\n\r\nexport default ({ activeNote, notes, tags, onChange, deleteData, saveData, newNote, filter, filterEnabled }) => {\r\n  const NotesTitles = [];\r\n  Object.keys(notes).forEach(id => {\r\n    NotesTitles.push(<li key={id} className={activeNote === id ? 'active' : undefined}>\r\n      <label htmlFor={`note_${id}`}>{notes[id].title}</label>\r\n      <input type=\"radio\" id={`note_${id}`} name=\"notesTitles\" \r\n        checked={+id === +activeNote} \r\n        onChange={() => onChange({ id })} />\r\n    </li>);\r\n  });\r\n  return (\r\n    <div className=\"notes-list\">\r\n      <h1>Notes</h1>\r\n      <input type=\"text\" id=\"newNoteTitle\" placeholder=\"Add new note title...\" />\r\n      <button className=\"btn btn-green\" onClick={ newNote }>New</button>\r\n      <ul>\r\n        { NotesTitles }\r\n      </ul>\r\n      <span>Filter by: { filterEnabled || 'none' }</span>\r\n      <button onClick={() => filter(null)} className=\"btn btn-inverted\">X</button>\r\n      <TagCloud tags={tags} deleteData={deleteData} saveData={saveData} filter={filter} />\r\n    </div>\r\n  )\r\n}","import NotesViewer from './NotesViewer';\r\n\r\nexport default NotesViewer;","import React from 'react';\r\nimport Tag from '../Tag';\r\nimport { focusAtEnd } from '../../utils/domWorker';\r\nimport './NotesViewer.scss';\r\n\r\nexport default class NotesViewer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { title: this.props.note.title };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (document.querySelector('p[contenteditable=\"true\"]') === null) {\r\n      this.highlightTags();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (document.querySelector('p[contenteditable=\"true\"]') === null) {\r\n      this.highlightTags();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({ title: nextProps.note.title });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    if (event.target.id === 'noteText' && event.keyCode === 32) {\r\n      this.highlightTags('add');\r\n    }\r\n  }\r\n\r\n  highlightTags = (mode = 'view') => {\r\n    const container = document.getElementById('noteText');\r\n    const content = container.innerText;\r\n    if (content.match(/(#[^\\s]+)/g) !== null) {\r\n      container.innerHTML = content.replace(/(#[^\\s]+)/g, `<span class=\"hightlight\">$1</span>`);\r\n      if (content.match(/(#[^\\s]+)/g).length !== document.querySelectorAll('#noteTags .tag-wrapper').length) {\r\n        const newTagArr = content.match(/(#[^\\s]+)/g);\r\n        this.props.autoTagCreate(newTagArr.map(el => el.slice(1)));\r\n      }\r\n      if (document.querySelector(':focus') !== null && document.querySelector(':focus').id === 'noteText') {\r\n        focusAtEnd(container);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { note, tags, editNote, saveData, deleteData, filter } = this.props;\r\n\r\n    const TagsElements = [];\r\n    if (Object.keys(tags).length !== 0) {\r\n      Object.keys(tags).forEach(id => {\r\n        TagsElements.push(<Tag key={id} title={tags[id]} filter={() => filter(id)}\r\n          deleteData={() => deleteData('tags', id)} />)\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"notes-viewer\">\r\n        <h1>{ this.state.title }</h1>\r\n        <input type=\"text\" value={ this.state.title } className=\"hidden\" id=\"editNoteTitle\"\r\n         onChange={this.handleChange} name=\"title\" />\r\n        <button className=\"btn btn-red\" onClick={() => deleteData('notes', note.id) }>Del</button>\r\n        <button className=\"btn btn-orange\" onClick={ editNote } id=\"editBtn\">Edit</button>\r\n        <button className=\"btn btn-green hidden\" onClick={() => {this.highlightTags('add'); saveData('notes', note.id)} } id=\"saveBtn\">Save</button>\r\n        <p className=\"textArea\" id=\"noteText\" contentEditable={false} \r\n          onKeyUp={this.handleChange} name=\"text\">{this.props.note.text}</p>\r\n        <div id=\"noteTags\">\r\n          {TagsElements}\r\n        </div>\r\n      </div>\r\n  )}\r\n}","import React from 'react';\n\nimport * as StorageWorker from './utils/StorageWorker';\nimport * as PrepareData from './utils/prepareDataToSave';\nimport * as DomWorker from './utils/domWorker';\nimport TagsFilter from './utils/tagsFilter';\n\nimport NotesList from './components/NotesList';\nimport NotesViewer from './components/NotesViewer';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    StorageWorker.checkData();\n    this.state = {\n      activeNoteId: StorageWorker.firstId('notes'),\n      tags: StorageWorker.getData('tags'),\n      notes: StorageWorker.getData('notes'),\n      filterEnabled: '',\n      noteTags: ''\n    }\n  }\n\n  changeNote = (target) => {\n    DomWorker.editEnd();\n    if (this.state.filterEnabled === '') {\n      this.reReadStorage(target.id);\n    } else {\n      this.setState({activeNoteId: target.id, \n        noteTags: TagsFilter(this.state.tags, this.state.notes[target.id].tags.split(','))});\n    }\n  }\n\n  reReadStorage = (targetId = StorageWorker.firstId('notes')) => {\n    const tags = StorageWorker.getData('tags');\n    const notes = StorageWorker.getData('notes');\n    const noteTags = TagsFilter(tags, notes[targetId].tags.split(','));\n    this.setState({\n      tags,\n      notes,\n      activeNoteId: targetId,\n      noteTags,\n      filterEnabled: ''\n    })\n  }\n\n  deleteData = (key, id) => {\n    StorageWorker.deleteData(key, id);\n    this.setState({filterEnabled: ''});\n    this.reReadStorage();\n  }\n\n  saveData = (key, id) => {\n    const dataToSave = key === 'tags' ? PrepareData.formatTag() : PrepareData.getNoteObj(id);\n    StorageWorker.saveData(key, dataToSave, id);\n    DomWorker.editEnd();\n  }\n\n  newNote = () => {\n    DomWorker.editStart();\n    DomWorker.clearAllInputs();\n    document.getElementById('editNoteTitle').value = document.getElementById('newNoteTitle').value;\n    document.querySelectorAll('#noteTags span').forEach(el => el.innerHTML = '');\n    const newId = StorageWorker.newId('notes');\n    const emptyNote = PrepareData.getNoteObj(newId);\n    StorageWorker.saveData('notes', emptyNote, newId);\n    this.reReadStorage(newId);\n  }\n\n  autoTagCreate = (newTagsNote) => {\n    const { activeNoteId, notes, tags } = this.state;\n    const savedTags = Object.values(tags);\n    const newTagsTotal = newTagsNote.filter(i => !savedTags.includes(i));\n    newTagsTotal.map(i => PrepareData.formatTag(i));\n    const newTagsTotalUnique = PrepareData.uniqueArr(newTagsTotal);\n    newTagsTotalUnique.forEach(tag => StorageWorker.saveData('tags', tag));\n    const modifNote = PrepareData.injectTags(notes[activeNoteId], newTagsNote);\n    StorageWorker.saveData('notes', modifNote, activeNoteId);\n    this.reReadStorage(activeNoteId);\n  }\n\n  filter = (id) => {\n    if (id === null) {\n      this.reReadStorage();\n      this.setState({ filterEnabled: ''})\n      return;\n    }\n    const notes = StorageWorker.getData('notes');\n    const tags = StorageWorker.getData('tags');\n    const filteredNotes = {};\n    for (const noteId in notes) {\n      if (notes[noteId].tags.split(',').includes(tags[id])) {\n        filteredNotes[noteId] = notes[noteId];\n      }\n    }\n    if (Object.keys(filteredNotes).length !== 0) {\n      this.setState({ activeNoteId: Object.keys(filteredNotes)[0], \n        notes: filteredNotes,\n        filterEnabled: tags[id],\n        noteTags: TagsFilter(tags, filteredNotes[Object.keys(filteredNotes)[0]].tags.split(',')) });\n    } else {\n      this.deleteData('tags', id);\n    }\n  }\n\n  render() {\n    const { activeNoteId, tags, notes, filterEnabled, noteTags } = this.state;\n    return (\n    <div className=\"App\">\n      <NotesList\n        activeNoteId={ activeNoteId }\n        notes={ notes } \n        tags={ tags } \n        onChange={ this.changeNote }\n        deleteData={this.deleteData }\n        saveData={ this.saveData }\n        newNote={ this.newNote }\n        filter={ this.filter }\n        filterEnabled={ filterEnabled }\n      />\n      <NotesViewer \n        note={ notes[this.state.activeNoteId] } \n        tags={ noteTags }\n        editNote={ DomWorker.editStart } \n        saveData={ this.saveData } \n        deleteData={ this.deleteData }\n        autoTagCreate={ this.autoTagCreate }\n        filter={this.filter}\n      />\n    </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}